from collections import deque

def is_palindrome(text):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–≤–µ–¥—ë–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º.
    –£—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã, –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è –ø—Ä–æ–±–µ–ª—ã, —Ä–µ–≥–∏—Å—Ç—Ä –∏ –∑–Ω–∞–∫–∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏.
    """
    clean_text = ''.join(char.lower() for char in text if char.isalnum())
    char_queue = deque(clean_text)

    while len(char_queue) > 1:
        if char_queue.popleft() != char_queue.pop():
            return False
    return True

def main():
    print("üîÅ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–∞–ª—ñ–Ω–¥—Ä–æ–º")
    print("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ (–∞–±–æ 'exit' –¥–ª—è –≤–∏—Ö–æ–¥—É)")

    try:
        while True:
            user_input = input("\nüìù –í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç: ").strip()

            if user_input.lower() == 'exit':
                print("üëã –ü—Ä–æ–≥—Ä–∞–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
                break

            result = is_palindrome(user_input)
            if result:
                print(f"‚úÖ '{user_input}' ‚Äî —Ü–µ –ø–∞–ª—ñ–Ω–¥—Ä–æ–º!")
            else:
                print(f"‚ùå '{user_input}' ‚Äî –Ω–µ –ø–∞–ª—ñ–Ω–¥—Ä–æ–º.")
    except KeyboardInterrupt:
        print("\nüëã –ü—Ä–æ–≥—Ä–∞–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —á–µ—Ä–µ–∑ KeyboardInterrupt")

if __name__ == "__main__":
    main()
